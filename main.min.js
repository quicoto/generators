(() => {
  var __create = Object.create;
  var __defProp = Object.defineProperty;
  var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
  var __getOwnPropNames = Object.getOwnPropertyNames;
  var __getProtoOf = Object.getPrototypeOf;
  var __hasOwnProp = Object.prototype.hasOwnProperty;
  var __markAsModule = (target) => __defProp(target, "__esModule", { value: true });
  var __require = /* @__PURE__ */ ((x) => typeof require !== "undefined" ? require : typeof Proxy !== "undefined" ? new Proxy(x, {
    get: (a, b) => (typeof require !== "undefined" ? require : a)[b]
  }) : x)(function(x) {
    if (typeof require !== "undefined")
      return require.apply(this, arguments);
    throw new Error('Dynamic require of "' + x + '" is not supported');
  });
  var __reExport = (target, module, copyDefault, desc) => {
    if (module && typeof module === "object" || typeof module === "function") {
      for (let key of __getOwnPropNames(module))
        if (!__hasOwnProp.call(target, key) && (copyDefault || key !== "default"))
          __defProp(target, key, { get: () => module[key], enumerable: !(desc = __getOwnPropDesc(module, key)) || desc.enumerable });
    }
    return target;
  };
  var __toESM = (module, isNodeMode) => {
    return __reExport(__markAsModule(__defProp(module != null ? __create(__getProtoOf(module)) : {}, "default", !isNodeMode && module && module.__esModule ? { get: () => module.default, enumerable: true } : { value: module, enumerable: true })), module);
  };

  // src/main.js
  var SindresorhusSlugify = __toESM(__require("https://cdn.skypack.dev/@sindresorhus/slugify@2.1.0"));
  var app = new Vue({
    el: "#app",
    data: {
      rating: 3,
      episode: null,
      season: null,
      share: 0,
      comment: "",
      show: "0",
      loading: true
    },
    mounted: function() {
      this.loading = false;
    },
    methods: {
      copy: function(event) {
        event.preventDefault();
        const $el = document.querySelector('[name="markdown"]');
        $el.select();
        document.execCommand("copy");
        this.$refs["github-link"].click();
      }
    },
    computed: {
      prettyShow: function() {
        return SindresorhusSlugify.default(this.show);
      },
      date: function() {
        const now = new Date();
        function _fixNumber(number) {
          if (number < 10)
            number = `0${number}`;
          return number;
        }
        const day = _fixNumber(now.getDate());
        const month = _fixNumber(now.getMonth() + 1);
        const hours = _fixNumber(now.getHours());
        const minutes = _fixNumber(now.getMinutes());
        const seconds = _fixNumber(now.getSeconds());
        return `${now.getFullYear()}-${month}-${day}T${hours}:${minutes}:${seconds}`;
      }
    }
  });
})();
